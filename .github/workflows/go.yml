name: Go pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
    - uses: actions/checkout@v4

      # Set up Go environment
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

      # Install golangci-lint
    - name: Install golangci-lint
      run: |
        curl -sSfL https://github.com/golangci/golangci-lint/releases/download/v1.50.1/golangci-lint-1.50.1-linux-amd64.tar.gz | tar -xzv -C /tmp
        sudo mv /tmp/golangci-lint-1.50.1-linux-amd64/golangci-lint /usr/local/bin/

      # Build the Go project
    - name: Build
      run: |
        cd user-service
        go build -v .

      # Run tests
    - name: Test
      run: |
        cd user-service
        go test -v .

      # Run the linter
    - name: Run golangci-lint
      run: golangci-lint run --fix --timeout 5m
  dockerize:
    runs-on: ubuntu-latest
    needs: build-and-test  # Ensure this job runs after `build-and-test` job

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build . --file user-service/Dockerfile -t serfanrud/user-service:${{ github.sha }}

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        if: github.ref == 'refs/heads/master' && success()  # Only push to Docker Hub on `master` branch and successful build
        run: |  
          docker push serfanrud/user-service:${{ github.sha }}

