name: Rust Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust-version: [1.70.0, stable]

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Rust environment
      - name: Set up Rust
        uses: actions/checkout@v4
        with:
          rust-version: ${{ matrix.rust-version }}

      # Install dependencies and build the project
      - name: Install dependencies and build
        run: |
          cd auth-service
          cargo build --release

      # Run tests
      - name: Run tests
        run: |
          cd auth-service
          cargo test --all --verbose

      # (Optional) Run clippy for linting
      - name: Run Clippy
        run: |
          cd auth-service
          cargo clippy --all --fix --allow-dirty -- -D warnings

  # This job will build and push the Docker image
  dockerize:
    runs-on: ubuntu-latest
    needs: build-and-test  # Ensure this job runs after `build-and-test` job

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t serfanrud/auth-service:${{ github.sha }} .

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        if: github.ref == 'refs/heads/master' && success()  # Only push to Docker Hub on `master` branch and successful build
        run: |  
          docker push serfanrud/auth-service:${{ github.sha }}